service: users-api

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:328697830963:table/usersTable

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

package:
  individually: true
  patterns:
    - "!*/**"

functions:
  get-users:
    handler: src/functions/users/get_users.handler
    runtime: python3.8
    package:
      patterns:
        - "src/functions/users/get_users.py"
        - "src/utils/constants.py"
        - "src/utils/dynamo.py"
        - "requirements.txt"
    events:
      - http:
          path: users
          method: GET
  
  get-user:
    handler: src/functions/users/get-user.handler
    package:
      patterns:
        - "src/functions/users/get-user.js"
        - "src/utils/constants.js"
        - "src/utils/dynamo.js"
    events:
      - http:
          path: users/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true
  
  create-users:
    handler: src/functions/users/create-users.handler
    package:
      patterns:
        - "src/functions/users/create-users.js"
        - "src/schemas/user.json"
        - "src/utils/constants.js"
        - "src/utils/dynamo.js"
    events:
      - http:
          path: users
          method: POST
          request:
            schemas:
              application/json: ${file(src/schemas/users/user.json)}
  
  update-users:
    handler: src/functions/users/update-users.handler
    package:
      patterns:
        - "src/functions/users/update-users.js"
        - "src/schemas/user.json"
        - "src/utils/constants.js"
        - "src/utils/dynamo.js"
    events:
      - http:
          path: users/{id}
          method: PATCH
          request:
            parameters:
              paths:
                id: true
            schemas:
              application/json: ${file(src/schemas/users/user.json)}
  
  delete-users:
    handler: src/functions/users/delete_users.handler
    runtime: python3.8
    package:
      patterns:
        - "src/functions/users/delete_users.py"
        - "src/utils/constants.py"
        - "src/utils/dynamo.py"
    events:
      - http:
          path: users/{id}
          method: DELETE
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    S3Bucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        AccessControl: PublicRead
        BucketName: stivenramireza-serverless

    SampleBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - 's3:GetObject'
              Effect: Allow
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
              Principal: '*'
